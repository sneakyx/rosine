#!/bin/bash
ACTUAL_DIR="$(pwd)"
PROJECT_NAME="$(basename ${ACTUAL_DIR})"
echo "
*******************************************************************************
                 Welcome to installation program of"
printf "%*s\n" $[40] "$PROJECT_NAME" # center name
echo "
*******************************************************************************
		There are three steps ahead:
-------------------------------------------------------------------------------"
echo "1. reset the variables to your environment
-------------------------------------------------------------------------------"
cd docker
echo "# generated by install-project.sh" > ./local/.env.docker.local # overwrite file if exists
file=$(grep -v '^#' ./.env.docker | cat)
for LINE in $file
do
   STANDARD_VALUE="${LINE#*=}"
   read -p "${LINE%=*} [${STANDARD_VALUE}]: " VALUE
   VALUE=${VALUE:-$STANDARD_VALUE}
   echo "${LINE%=*}=${VALUE}" >> ./local/.env.docker.local
done
echo "
-------------------------------------------------------------------------------
2. run initial docker container
-------------------------------------------------------------------------------"
docker compose -f docker-compose.initial.yml --env-file ./local/.env.docker.local up --force-recreate --build
if [ $? -ne 0 ]
then
	echo " Fehler aufgetreten beim Starten des Containers"
	cd $ACTUAL_DIR
	exit 1
fi

docker compose -f docker-compose.initial.yml --env-file ./local/.env.docker.local down
echo "
--------------------------------------------------------------------------------
3. add other files

echo "*******************************************************************************"
printf "%*s\n" $[40] "$PROJECT_NAME" # center name

echo "                 was succesfully installed
*******************************************************************************
start with
docker compose -f ${ACTUAL_DIR}/docker/docker-compose.develop.yml --env-file ${ACTUAL_DIR}/local/.env.docker.local up --force-recreate --build
"
cd $ACTUAL_DIR
